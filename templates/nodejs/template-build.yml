---
kind: Template
apiVersion: v1
metadata:
  annotations:
    description: InfoGraphic node.js builder
  name: infographic-nodejs-builder
labels:
  template: infographic-nodejs-builder
parameters:
- name: NAMESPACE
  description: The OpenShift Namespace where the Infographic Build resides.
  displayName: Infographic Build Namespace
  value: infographic-build
- name: BUILD_IMAGE_NAME
  description: The name for the build image.
  displayName: node.js build image name
  value: nodejs
  required: true
- name: BUILD_IMAGE_TAG
  description: The ImageStreamTag for the build source image
  displayName: Build Image Tag
  value: '10'
  required: true
- name: BUILD_IMAGE_NAMESPACE
  description: The namespace for the build source image
  displayName: Build Image Namespace
  value: 'openshift'
  required: true
- name: APPLICATION_NAME
  description: The name for the Application.
  displayName: Application name
  value: infographic
  required: true
- name: APPLICATION_VERSION
  description: The version for the Application.
  displayName: Application Version
  value: latest
  required: true
- name: APPLICATION_SOURCE_REPO_URL
  description: Git source URL for application
  displayName: Application source url
  value: https://github.com/rht-labs/infographic.git
  required: true
- name: APPLICATION_SOURCE_REPO_REF
  description: Application source branch/tag reference.
  displayName: Application source branch/tag reference.
  value: master
  required: false
objects:
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: "${APPLICATION_NAME}"
    namespace: "${NAMESPACE}"
    labels:
      application: "${APPLICATION_NAME}"
- kind: BuildConfig
  apiVersion: v1
  metadata:
    annotations:
    labels:
      app: "${APPLICATION_NAME}"
    name: "${APPLICATION_NAME}"
    namespace: "${NAMESPACE}"
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: "${APPLICATION_NAME}:${APPLICATION_VERSION}"
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        ref: "${APPLICATION_SOURCE_REPO_REF}"
        uri: "${APPLICATION_SOURCE_REPO_URL}"
      type: Git
    strategy:
      type: Source
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: "${BUILD_IMAGE_NAME}:${BUILD_IMAGE_TAG}"
          namespace: "${BUILD_IMAGE_NAMESPACE}"
    triggers:
    - type: ImageChange
    - type: ConfigChange
